const budgetService = require('../expenses/personal-budgets.service');

module.exports = {
  addBudget: (req, res) => {
    const { month_year, budget_amount } = req.body;
    const userId = req.user.userId;

    if (!month_year || !budget_amount) {
      return res.status(400).json({
        success: 0,
        message: "Month and budget amount are required"
      });
    }

    //one budget amount each month
    budgetService.checkBudgetExists(userId, month_year, (err, exists) => {
      if (err) {
        return res.status(500).json({
          success: 0,
          message: "Database error when checking existing budget"
        });
      }

      if (exists) {
        budgetService.updateBudget(
          { userId, month_year, budget_amount },
          (err, results) => {
            if (err) {
              return res.status(500).json({
                success: 0,
                message: "Error updating budget"
              });
            }
            return res.json({
              success: 1,
              message: "Budget updated successfully",
              data: results
            });
          }
        );
      } else {
        budgetService.addBudget(
          { userId, month_year, budget_amount },
          (err, results) => {
            if (err) {
              if (err.code === 'ER_DUP_ENTRY') {
                return res.status(409).json({
                  success: 0,
                  message: "You can only add one budget per month. Try updating it instead."
                });
              }
              return res.status(500).json({
                success: 0,
                message: err.message || "Database error"
              });
            }
      
            return res.json({
              success: 1,
              message: "Budget set successfully",
              data: results
            });
          }
        );
      }
    });
  },
    getBudgets: (req, res) => {
    const userId = req.user.userId;
    budgetService.getBudgetsByUser(userId, (err, results) => {
      if (err) {
        return res.status(500).json({
          success: 0,
          message: "Database error"
        });
      }
      return res.json({
        success: 1,
        data: results
      });
    });
  }
};
